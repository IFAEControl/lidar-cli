/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.2.1/userguide/tutorial_java_projects.html
 */

apply plugin: 'java'
apply plugin: 'com.google.protobuf'
apply plugin: "com.github.ben-manes.versions"

buildscript {
    repositories {
        maven { // The google mirror is less flaky than mavenCentral()
            url "https://maven-central.storage-download.googleapis.com/repos/central/data/"
        }

        jcenter()
    }

    dependencies { // ASSUMES GRADLE 2.12 OR HIGHER. Use plugin version 0.7.5 with earlier
        // gradle versions
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.10'
        classpath "com.github.ben-manes:gradle-versions-plugin:0.21.0"
    }
}

repositories {
    maven {
        //url "http://raw.github.com/ORGANIZATION/REPO/BRANCH"
        url "https://gitlab.pic.es/LidarCTA/lidar-artifacts/raw/repository"
    }

    jcenter()
    mavenLocal()
}

sourceCompatibility = 11
targetCompatibility = 11

//mainClassName = 'cat.ifae.cta.lidar.control.MotorsClient'

def grpcVersion = '1.23.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.9.1'
def protocVersion = '3.9.1'

dependencies {
    compile project(':libutil')

    compileOnly "javax.annotation:javax.annotation-api:1.3.2"

    compile "com.google.api.grpc:proto-google-common-protos:1.16.0"
    compile "io.grpc:grpc-alts:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    compile group: 'com.google.guava', name: 'guava', version: '28.1-jre'
    compile 'info.picocli:picocli:4.0.3'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
    compile group: 'net.harawata', name: 'appdirs', version: '1.0.3'
    compile group: 'org.slf4j', name:'slf4j-log4j12', version: '1.7.2'

    testCompile "io.grpc:grpc-testing:${grpcVersion}"
    testCompile 'junit:junit:4.12'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.28.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '4.12.3'
}

test {
    useJUnitPlatform()

    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}


sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }

        resources {
            srcDir 'properties'
            include '*.properties'
            include 'log4j2.xml'
        }
    }
}

apply plugin: 'application'

startScripts.enabled = false

task controlClient(type: CreateStartScripts) {
    mainClassName="cat.ifae.cta.lidar.control.cli.Licli"
    applicationName = "licli"
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
}

applicationDistribution.into('bin') {
    from(controlClient)
    fileMode = 0755
}

task runCli(type:JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    standardInput = System.in

    main = project.hasProperty("mainClass") ? project.getProperty("mainClass") : "cat.ifae.cta.lidar.control.cli.Licli"
}
